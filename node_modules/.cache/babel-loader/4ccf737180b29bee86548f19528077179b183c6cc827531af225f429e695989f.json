{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\korol\\\\OneDrive\\\\Desktop\\\\react_project\\\\my-app\\\\src\\\\Components\\\\LoginPage\\\\LoginForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport usersData from '../../users.json';\nimport './Parallax/parallax.css';\nimport SideBar from '../MainPage/MainPageComponents/SideBarComponents/SideBar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginForm = ({\n  usersData\n}) => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [emailDirty, setEmailDirty] = useState(false);\n  const [passwordDirty, setPasswordDirty] = useState(false);\n  const [emailError, setEmailError] = useState('Рядок не може бути пустим');\n  const [passwordError, setPasswordError] = useState('Рядок не може бути пустим');\n  const [formValid, setFormValid] = useState(false);\n  const [isValidUser, setIsValidUser] = useState(false);\n  const [user, setUser] = useState(null); // Тут оголошуємо стан для зберігання користувача\n\n  useEffect(() => {\n    if (emailError || passwordError) {\n      setFormValid(false);\n    } else {\n      setFormValid(true);\n    }\n  }, [emailError, passwordError]);\n  const emailHandler = e => {\n    const value = e.target.value;\n\n    // Фільтрація некоректних символів\n    const filteredValue = value.replace(/[^A-Za-z0-9._%+-@]/g, '');\n\n    // Оновлення стану з відфільтрованим значенням\n    setEmail(filteredValue);\n    const atIndex = filteredValue.indexOf('@');\n    const usernamePart = filteredValue.substring(0, atIndex);\n    const usernameValid = /^[A-Za-z0-9]+$/.test(usernamePart);\n    if (!usernameValid) {\n      setEmailError('Частина перед @ повинна містити лише літери та цифри');\n    } else {\n      setEmailError('');\n    }\n\n    // Регулярний вираз для перевірки правильності email\n    const re = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n\n    // Перевірка, чи email правильний\n    if (!re.test(String(filteredValue).toLowerCase())) {\n      setEmailError('Некоректне заповнення');\n      return;\n    }\n  };\n  const passwordHandler = e => {\n    setPassword(e.target.value);\n    const passwordLength = e.target.value.length;\n    if (passwordLength < 3 || passwordLength > 10) {\n      if (!passwordLength) {\n        setPasswordError('Рядок не може бути пустим');\n      } else {\n        setPasswordError('Пароль має бути довшим за 3 та коротшим за 10 символів');\n      }\n    } else {\n      setPasswordError('');\n    }\n  };\n  const blurHandler = e => {\n    switch (e.target.name) {\n      case 'email':\n        setEmailDirty(true);\n        break;\n      case 'password':\n        setPasswordDirty(true);\n        break;\n    }\n  };\n  const navigate = useNavigate();\n  const submitHandler = e => {\n    e.preventDefault(); // Зупиняє перезавантаження сторінки\n\n    if (usersData && Array.isArray(usersData)) {\n      const foundUser = usersData.find(user => user.email === email && user.password === password);\n      if (foundUser) {\n        setUser(foundUser); // Зберігаємо користувача у стані\n      } else {\n        alert('Невірний email або пароль');\n      }\n    } else {\n      console.error('usersData is undefined or not an array.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      className: \"login-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: e => emailHandler(e),\n        value: email,\n        onBlur: e => blurHandler(e),\n        name: \"email\",\n        type: \"text\",\n        placeholder: \"Enter your email...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 5\n      }, this), emailDirty && emailError && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: 'red'\n        },\n        children: emailError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 36\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: e => passwordHandler(e),\n        value: password,\n        onBlur: e => blurHandler(e),\n        name: \"password\",\n        type: \"password\",\n        placeholder: \"Enter your password...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 5\n      }, this), passwordDirty && passwordError && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: 'red'\n        },\n        children: passwordError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 42\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formValid,\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 4\n    }, this), user && /*#__PURE__*/_jsxDEV(SideBar, {\n      user: user\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 3\n  }, this);\n};\n_s(LoginForm, \"5febp0a0kuAgLr6fiOI14Wi1uAo=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginForm;\nexport default LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","usersData","SideBar","jsxDEV","_jsxDEV","LoginForm","_s","email","setEmail","password","setPassword","emailDirty","setEmailDirty","passwordDirty","setPasswordDirty","emailError","setEmailError","passwordError","setPasswordError","formValid","setFormValid","isValidUser","setIsValidUser","user","setUser","emailHandler","e","value","target","filteredValue","replace","atIndex","indexOf","usernamePart","substring","usernameValid","test","re","String","toLowerCase","passwordHandler","passwordLength","length","blurHandler","name","navigate","submitHandler","preventDefault","Array","isArray","foundUser","find","alert","console","error","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","onChange","onBlur","type","placeholder","style","color","disabled","_c","$RefreshReg$"],"sources":["C:/Users/korol/OneDrive/Desktop/react_project/my-app/src/Components/LoginPage/LoginForm.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { useNavigate } from 'react-router-dom';\r\nimport usersData from '../../users.json'\r\nimport './Parallax/parallax.css'\r\nimport SideBar from '../MainPage/MainPageComponents/SideBarComponents/SideBar';\r\n\r\nconst LoginForm = ({usersData}) => {\r\n\tconst [email, setEmail] = useState('')\r\n\tconst [password, setPassword] = useState('')\r\n\tconst [emailDirty, setEmailDirty] = useState(false)\r\n\tconst [passwordDirty, setPasswordDirty] = useState(false)\r\n\tconst [emailError, setEmailError] = useState('Рядок не може бути пустим')\r\n\tconst [passwordError, setPasswordError] = useState('Рядок не може бути пустим')\r\n\tconst [formValid, setFormValid] = useState(false)\r\n\tconst [isValidUser, setIsValidUser] = useState(false);\r\n\tconst [user, setUser] = useState(null); // Тут оголошуємо стан для зберігання користувача\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tif (emailError || passwordError) {\r\n\t\t\tsetFormValid(false)\r\n\t\t} else {\r\n\t\t\tsetFormValid(true)\r\n\t\t}\r\n\t}, [emailError, passwordError])\r\n\r\n\r\n\r\n\tconst emailHandler = (e) => {\r\n\t\tconst value = e.target.value;\r\n\r\n\t\t// Фільтрація некоректних символів\r\n\t\tconst filteredValue = value.replace(/[^A-Za-z0-9._%+-@]/g, '');\r\n\r\n\t\t// Оновлення стану з відфільтрованим значенням\r\n\t\tsetEmail(filteredValue);\r\n\t\tconst atIndex = filteredValue.indexOf('@');\r\n\t\tconst usernamePart = filteredValue.substring(0, atIndex);\r\n\t\tconst usernameValid = /^[A-Za-z0-9]+$/.test(usernamePart);\r\n\r\n\t\tif (!usernameValid) {\r\n\t\t\tsetEmailError('Частина перед @ повинна містити лише літери та цифри');\r\n\t\t} else {\r\n\t\t\tsetEmailError('');\r\n\t\t}\r\n\r\n\t\t// Регулярний вираз для перевірки правильності email\r\n\t\tconst re = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n\r\n\t\t// Перевірка, чи email правильний\r\n\t\tif (!re.test(String(filteredValue).toLowerCase())) {\r\n\t\t\tsetEmailError('Некоректне заповнення');\r\n\t\t\treturn;\r\n\t\t}\r\n\t};\r\n\r\n\tconst passwordHandler = (e) => {\r\n\t\tsetPassword(e.target.value);\r\n\t\tconst passwordLength = e.target.value.length;\r\n\r\n\t\tif (passwordLength < 3 || passwordLength > 10) {\r\n\t\t\tif (!passwordLength) {\r\n\t\t\t\tsetPasswordError('Рядок не може бути пустим');\r\n\t\t\t} else {\r\n\t\t\t\tsetPasswordError('Пароль має бути довшим за 3 та коротшим за 10 символів');\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tsetPasswordError('');\r\n\t\t}\r\n\t};\r\n\r\n\r\n\r\n\tconst blurHandler = (e) => {\r\n\t\tswitch (e.target.name) {\r\n\t\t\tcase 'email':\r\n\t\t\t\tsetEmailDirty(true)\r\n\t\t\t\tbreak\r\n\t\t\tcase 'password':\r\n\t\t\t\tsetPasswordDirty(true)\r\n\t\t\t\tbreak\r\n\t\t}\r\n\t}\r\n\r\n\tconst navigate = useNavigate();\r\n\r\n\tconst submitHandler = (e) => {\r\n\t\te.preventDefault(); // Зупиняє перезавантаження сторінки\r\n\r\n\t\tif (usersData && Array.isArray(usersData)) {\r\n      const foundUser = usersData.find((user) => user.email === email && user.password === password);\r\n      \r\n      if (foundUser) {\r\n        setUser(foundUser); // Зберігаємо користувача у стані\r\n      } else {\r\n        alert('Невірний email або пароль');\r\n      }\r\n    } else {\r\n      console.error('usersData is undefined or not an array.');\r\n    }\r\n\t}\r\n\r\n\r\n\treturn (\r\n\t\t<div className='wrapper'>\r\n\t\t\t<form onSubmit={submitHandler} className='login-form'>\r\n\r\n\t\t\t\t<h1>Login</h1>\r\n\r\n\t\t\t\t<input\r\n\t\t\t\t\tonChange={e => emailHandler(e)}\r\n\t\t\t\t\tvalue={email}\r\n\t\t\t\t\tonBlur={e => blurHandler(e)}\r\n\t\t\t\t\tname='email'\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tplaceholder='Enter your email...'\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t{(emailDirty && emailError) && <div style={{ color: 'red' }}>{emailError}</div>}\r\n\r\n\t\t\t\t<input\r\n\t\t\t\t\tonChange={e => passwordHandler(e)}\r\n\t\t\t\t\tvalue={password}\r\n\t\t\t\t\tonBlur={e => blurHandler(e)}\r\n\t\t\t\t\tname='password'\r\n\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\tplaceholder='Enter your password...' />\r\n\r\n\t\t\t\t{(passwordDirty && passwordError) && <div style={{ color: 'red' }}>{passwordError}</div>}\r\n\r\n\t\t\t\t<button\r\n\t\t\t\t\tdisabled={!formValid}\r\n\t\t\t\t\ttype='submit'>\r\n\t\t\t\t\tLogin\r\n\t\t\t\t</button>\r\n\r\n\t\t\t</form>\r\n\t\t\t{user && <SideBar user={user} />}\r\n\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default LoginForm\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}