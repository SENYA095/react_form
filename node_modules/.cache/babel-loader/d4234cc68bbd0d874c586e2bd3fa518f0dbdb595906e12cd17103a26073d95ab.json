{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\korol\\\\OneDrive\\\\Desktop\\\\react_project\\\\my-app\\\\src\\\\Form.jsx\",\n  _s = $RefreshSig$();\nimport React, { Component, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Form = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [emailDirty, setEmailDirty] = useState(false);\n  const [passwordDirty, setPasswordDirty] = useState(false);\n  const [emailError, setEmailError] = useState('Рядок не може бути пустим');\n  const [passwordError, setPasswordError] = useState('Рядок не може бути пустим');\n  const emailHandler = e => {\n    setEmail(e.target.value);\n    const re = /^(([^<>()[\\]\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i;\n    re.test(String(email).toLowerCase());\n    if (!re.test(String(e.target.value).toLowerCase())) {\n      setEmailError('Некоректне заповнення');\n    } else {\n      setEmailError('');\n    }\n  };\n  const blurHandler = e => {\n    switch (e.target.name) {\n      case 'email':\n        setEmailDirty(true);\n        break;\n      case 'password':\n        setPasswordDirty(true);\n        break;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 6\n      }, this), emailDirty && emailError && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: 'red'\n        },\n        children: emailError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 37\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: email,\n        onBlur: e => blurHandler(e),\n        name: \"email\",\n        type: \"text\",\n        placeholder: \"Enter your email...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 6\n      }, this), passwordDirty && passwordError && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: 'red'\n        },\n        children: passwordError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 43\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        va: true,\n        onBlur: e => blurHandler(e),\n        name: \"password\",\n        type: \"password\",\n        placeholder: \"Enter your password...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 4\n  }, this);\n};\n_s(Form, \"HK8IKYv+QayN6qwlTixSh7LAcKU=\");\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","Component","useState","jsxDEV","_jsxDEV","Form","_s","email","setEmail","password","setPassword","emailDirty","setEmailDirty","passwordDirty","setPasswordDirty","emailError","setEmailError","passwordError","setPasswordError","emailHandler","e","target","value","re","test","String","toLowerCase","blurHandler","name","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","onBlur","type","placeholder","va","_c","$RefreshReg$"],"sources":["C:/Users/korol/OneDrive/Desktop/react_project/my-app/src/Form.jsx"],"sourcesContent":["import React, { Component, useState } from 'react'\r\n\r\nconst Form = () => {\r\n\tconst [email, setEmail] = useState ('')\r\n\tconst [password, setPassword] = useState('')\r\n\tconst [emailDirty, setEmailDirty] = useState(false)\r\n\tconst [passwordDirty, setPasswordDirty] = useState(false)\r\n\tconst [emailError, setEmailError] = useState('Рядок не може бути пустим')\r\n\tconst [passwordError, setPasswordError] = useState('Рядок не може бути пустим')\r\n\r\n\tconst emailHandler  = (e) => {\r\n\t\tsetEmail(e.target.value)\r\n\t\tconst re = /^(([^<>()[\\]\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i;\r\n\t \tre.test(String(email).toLowerCase())\r\n\t\tif(!re.test(String(e.target.value).toLowerCase())){\r\n\t\t\tsetEmailError('Некоректне заповнення')\r\n\t\t}else{\r\n\t\t\tsetEmailError('')\r\n\t\t}\r\n\t}\r\n\r\n\tconst blurHandler = (e) => {\r\n\t\tswitch (e.target.name){\r\n\t\t\tcase 'email':\r\n\t\t\t\tsetEmailDirty (true)\r\n\t\t\t\tbreak\r\n\t\t\tcase 'password':\r\n\t\t\t\tsetPasswordDirty (true)\t\r\n\t\t\t\tbreak\r\n\t\t}\r\n\t}\r\n\r\n\t\treturn (\r\n\t\t\t<div className='container'>\r\n\t\t\t\t<form>\r\n\t\t\t\t\t<h1>Login</h1>\r\n\t\t\t\t\t{(emailDirty && emailError) && <div style={{color: 'red'}}>{emailError}</div>}\r\n\t\t\t\t\r\n\t\t\t\t\t<input value={email} onBlur={e => blurHandler(e)} name='email' type=\"text\" placeholder='Enter your email...' />\r\n\t\t\t\t\t{(passwordDirty && passwordError) && <div style={{color: 'red'}}>{passwordError}</div>}\r\n\t\t\t\t\t<input va onBlur={e => blurHandler(e)} name='password' type=\"password\" placeholder='Enter your password...' />\r\n\t\t\t\t\t<button type='submit'>Login</button>\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n\texport default Form\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}