{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\korol\\\\OneDrive\\\\Desktop\\\\react_project\\\\my-app\\\\src\\\\Components\\\\LoginPage\\\\Form.jsx\",\n  _s = $RefreshSig$();\nimport React, { Component, useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport usersData from '../../users.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Form = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [emailDirty, setEmailDirty] = useState(false);\n  const [passwordDirty, setPasswordDirty] = useState(false);\n  const [emailError, setEmailError] = useState('Рядок не може бути пустим');\n  const [passwordError, setPasswordError] = useState('Рядок не може бути пустим');\n  const [formValid, setFormValid] = useState(false);\n  const [isValidUser, setIsValidUser] = useState(false);\n  useEffect(() => {\n    if (emailError || passwordError) {\n      setFormValid(false);\n    } else {\n      setFormValid(true);\n    }\n  }, [emailError, passwordError]);\n  const emailHandler = e => {\n    const value = e.target.value;\n\n    // Фільтрація некоректних символів\n    const filteredValue = value.replace(/[^A-Za-z0-9._%+-@]/g, '');\n\n    // Оновлення стану з відфільтрованим значенням\n    setEmail(filteredValue);\n    const atIndex = filteredValue.indexOf('@');\n    const usernamePart = filteredValue.substring(0, atIndex);\n    const usernameValid = /^[A-Za-z0-9]+$/.test(usernamePart);\n    if (!usernameValid) {\n      setEmailError('Частина перед @ повинна містити лише літери та цифри');\n    } else {\n      setEmailError('');\n    }\n\n    // Регулярний вираз для перевірки правильності email\n    const re = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n\n    // Перевірка, чи email правильний\n    if (!re.test(String(filteredValue).toLowerCase())) {\n      setEmailError('Некоректне заповнення');\n      return;\n    }\n  };\n  const passwordHandler = e => {\n    setPassword(e.target.value);\n    const passwordLength = e.target.value.length;\n    if (passwordLength < 3 || passwordLength > 10) {\n      if (!passwordLength) {\n        setPasswordError('Рядок не може бути пустим');\n      } else {\n        setPasswordError('Пароль має бути довшим за 3 та коротшим за 10 символів');\n      }\n    } else {\n      setPasswordError('');\n    }\n  };\n  const blurHandler = e => {\n    switch (e.target.name) {\n      case 'email':\n        setEmailDirty(true);\n        break;\n      case 'password':\n        setPasswordDirty(true);\n        break;\n    }\n  };\n  const navigate = useNavigate();\n  const submitHandler = e => {\n    e.preventDefault(); // Зупиняє перезавантаження сторінки\n\n    const user = usersData.find(user => user.email === email && user.password === password);\n    if (user) {\n      setIsValidUser(true);\n      navigate('/mainpage', {\n        state: {\n          username: user.username\n        }\n      });\n    } else {\n      setIsValidUser(false);\n      alert('Невірний email або пароль');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrapper mouse\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: e => emailHandler(e),\n        value: email,\n        onBlur: e => blurHandler(e),\n        name: \"email\",\n        type: \"text\",\n        placeholder: \"Enter your email...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 5\n      }, this), emailDirty && emailError && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: 'red'\n        },\n        children: emailError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 36\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: e => passwordHandler(e),\n        value: password,\n        onBlur: e => blurHandler(e),\n        name: \"password\",\n        type: \"password\",\n        placeholder: \"Enter your password...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 5\n      }, this), passwordDirty && passwordError && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: 'red'\n        },\n        children: passwordError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 42\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formValid,\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 3\n  }, this);\n};\n_s(Form, \"967P4q304Jpt/D/5dXgytiVPNDQ=\", false, function () {\n  return [useNavigate];\n});\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","Component","useEffect","useState","useNavigate","usersData","jsxDEV","_jsxDEV","Form","_s","email","setEmail","password","setPassword","emailDirty","setEmailDirty","passwordDirty","setPasswordDirty","emailError","setEmailError","passwordError","setPasswordError","formValid","setFormValid","isValidUser","setIsValidUser","emailHandler","e","value","target","filteredValue","replace","atIndex","indexOf","usernamePart","substring","usernameValid","test","re","String","toLowerCase","passwordHandler","passwordLength","length","blurHandler","name","navigate","submitHandler","preventDefault","user","find","state","username","alert","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","onChange","onBlur","type","placeholder","style","color","disabled","_c","$RefreshReg$"],"sources":["C:/Users/korol/OneDrive/Desktop/react_project/my-app/src/Components/LoginPage/Form.jsx"],"sourcesContent":["import React, { Component, useEffect, useState } from 'react'\r\nimport { useNavigate } from 'react-router-dom';\r\nimport usersData from '../../users.json';\r\n\r\nconst Form = () => {\r\n\tconst [email, setEmail] = useState('')\r\n\tconst [password, setPassword] = useState('')\r\n\tconst [emailDirty, setEmailDirty] = useState(false)\r\n\tconst [passwordDirty, setPasswordDirty] = useState(false)\r\n\tconst [emailError, setEmailError] = useState('Рядок не може бути пустим')\r\n\tconst [passwordError, setPasswordError] = useState('Рядок не може бути пустим')\r\n\tconst [formValid, setFormValid] = useState(false)\r\n\tconst [isValidUser, setIsValidUser] = useState(false);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (emailError || passwordError) {\r\n\t\t\tsetFormValid(false)\r\n\t\t} else {\r\n\t\t\tsetFormValid(true)\r\n\t\t}\r\n\t}, [emailError, passwordError])\r\n\r\n\r\n\r\n\tconst emailHandler = (e) => {\r\n\t\tconst value = e.target.value;\r\n\r\n\t\t// Фільтрація некоректних символів\r\n\t\tconst filteredValue = value.replace(/[^A-Za-z0-9._%+-@]/g, '');\r\n\r\n\t\t// Оновлення стану з відфільтрованим значенням\r\n\t\tsetEmail(filteredValue);\r\n\t\tconst atIndex = filteredValue.indexOf('@');\r\n\t\tconst usernamePart = filteredValue.substring(0, atIndex);\r\n\t\tconst usernameValid = /^[A-Za-z0-9]+$/.test(usernamePart);\r\n\r\n\t\tif (!usernameValid) {\r\n\t\t\tsetEmailError('Частина перед @ повинна містити лише літери та цифри');\r\n\t\t} else {\r\n\t\t\tsetEmailError('');\r\n\t\t}\r\n\r\n\t\t// Регулярний вираз для перевірки правильності email\r\n\t\tconst re = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n\r\n\t\t// Перевірка, чи email правильний\r\n\t\tif (!re.test(String(filteredValue).toLowerCase())) {\r\n\t\t\tsetEmailError('Некоректне заповнення');\r\n\t\t\treturn;\r\n\t\t}\r\n\t};\r\n\r\n\tconst passwordHandler = (e) => {\r\n\t\tsetPassword(e.target.value);\r\n\t\tconst passwordLength = e.target.value.length;\r\n\r\n\t\tif (passwordLength < 3 || passwordLength > 10) {\r\n\t\t\tif (!passwordLength) {\r\n\t\t\t\tsetPasswordError('Рядок не може бути пустим');\r\n\t\t\t} else {\r\n\t\t\t\tsetPasswordError('Пароль має бути довшим за 3 та коротшим за 10 символів');\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tsetPasswordError('');\r\n\t\t}\r\n\t};\r\n\r\n\r\n\r\n\tconst blurHandler = (e) => {\r\n\t\tswitch (e.target.name) {\r\n\t\t\tcase 'email':\r\n\t\t\t\tsetEmailDirty(true)\r\n\t\t\t\tbreak\r\n\t\t\tcase 'password':\r\n\t\t\t\tsetPasswordDirty(true)\r\n\t\t\t\tbreak\r\n\t\t}\r\n\t}\r\n\r\n\tconst navigate = useNavigate();\r\n\r\n\tconst submitHandler = (e) => {\r\n\t\te.preventDefault(); // Зупиняє перезавантаження сторінки\r\n\r\n\t\tconst user = usersData.find((user) => user.email === email && user.password === password);\r\n\r\n\r\n\t\tif (user) {\r\n\t\t\tsetIsValidUser(true);\r\n\t\t\tnavigate('/mainpage', { state: { username: user.username } });\r\n\t\t} else {\r\n\t\t\tsetIsValidUser(false);\r\n\t\t\talert('Невірний email або пароль')\r\n\t\t}\r\n\t}\r\n\r\n\r\n\treturn (\r\n\t\t<div className='wrapper mouse'>\r\n\t\t\t<form onSubmit={submitHandler} >\r\n\r\n\t\t\t\t<h1>Login</h1>\r\n\r\n\t\t\t\t<input\r\n\t\t\t\t\tonChange={e => emailHandler(e)}\r\n\t\t\t\t\tvalue={email}\r\n\t\t\t\t\tonBlur={e => blurHandler(e)}\r\n\t\t\t\t\tname='email'\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tplaceholder='Enter your email...'\r\n\t\t\t\t/>\r\n\r\n\t\t\t\t{(emailDirty && emailError) && <div style={{ color: 'red' }}>{emailError}</div>}\r\n\r\n\t\t\t\t<input\r\n\t\t\t\t\tonChange={e => passwordHandler(e)}\r\n\t\t\t\t\tvalue={password}\r\n\t\t\t\t\tonBlur={e => blurHandler(e)}\r\n\t\t\t\t\tname='password'\r\n\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\tplaceholder='Enter your password...' />\r\n\r\n\t\t\t\t{(passwordDirty && passwordError) && <div style={{ color: 'red' }}>{passwordError}</div>}\r\n\r\n\t\t\t\t<button\r\n\t\t\t\t\tdisabled={!formValid}\r\n\t\t\t\t\ttype='submit'>\r\n\t\t\t\t\tLogin\r\n\t\t\t\t</button>\r\n\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Form\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}